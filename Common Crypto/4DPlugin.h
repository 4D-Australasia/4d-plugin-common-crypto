/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : Common Crypto
 #	author : miyako
 #	2016/03/31
 #
 # --------------------------------------------------------------------------------*/

#include "openssl/ssl.h"
#include "openssl/bio.h"
#include "openssl/evp.h"
#include "openssl/buffer.h"
#include "openssl/hmac.h"
#include "openssl/pkcs12.h"
#include "openssl/err.h"
#include "openssl/sha.h"

// --- Common Crypto
void PEM_From_P12(sLONG_PTR *pResult, PackagePtr pParams);
void Get_timestamp(sLONG_PTR *pResult, PackagePtr pParams);
void Get_timestring(sLONG_PTR *pResult, PackagePtr pParams);
void Get_unixtime(sLONG_PTR *pResult, PackagePtr pParams);
void RSASHA256(sLONG_PTR *pResult, PackagePtr pParams);
void HMACMD5(sLONG_PTR *pResult, PackagePtr pParams);
void HMACSHA1(sLONG_PTR *pResult, PackagePtr pParams);
void HMACSHA256(sLONG_PTR *pResult, PackagePtr pParams);
void HMACSHA384(sLONG_PTR *pResult, PackagePtr pParams);
void HMACSHA512(sLONG_PTR *pResult, PackagePtr pParams);
void SHA384(sLONG_PTR *pResult, PackagePtr pParams);
void SHA512(sLONG_PTR *pResult, PackagePtr pParams);
void MD5(sLONG_PTR *pResult, PackagePtr pParams);
void SHA1(sLONG_PTR *pResult, PackagePtr pParams);
void SHA256(sLONG_PTR *pResult, PackagePtr pParams);
void RSASHA1(sLONG_PTR *pResult, PackagePtr pParams);
void AES128(sLONG_PTR *pResult, PackagePtr pParams);
void AES192(sLONG_PTR *pResult, PackagePtr pParams);
void AES256(sLONG_PTR *pResult, PackagePtr pParams);
void RIPEMD160(sLONG_PTR *pResult, PackagePtr pParams);
void RSAVERIFYSHA1(sLONG_PTR *pResult, PackagePtr pParams);
void RSAVERIFYSHA256(sLONG_PTR *pResult, PackagePtr pParams);
void PBKDF2(sLONG_PTR *pResult, PackagePtr pParams);